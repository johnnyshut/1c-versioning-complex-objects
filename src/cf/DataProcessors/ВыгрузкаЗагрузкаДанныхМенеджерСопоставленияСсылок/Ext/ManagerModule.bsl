///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ВыполнитьСтандартноеСопоставлениеСсылок(ПотокЗаменыСсылок, Знач ОбъектМетаданных, Знач ТаблицаИсходныхСсылок, Знач МенеджерСопоставленияСсылок) Экспорт
	
	ИмяТипаXML = ВыгрузкаЗагрузкаДанныхСлужебный.XMLТипСсылки(ОбъектМетаданных);
	
	ИмяКолонкиИсходнойСсылки = МенеджерСопоставленияСсылок.ИмяКолонкиИсходныхСсылок();
	
	Выборка = ВыборкаСопоставленияСсылок(ОбъектМетаданных, ТаблицаИсходныхСсылок, ИмяКолонкиИсходнойСсылки);
	
	Пока Выборка.Следующий() Цикл
		
		ПотокЗаменыСсылок.ЗаменитьСсылку(ИмяТипаXML, Строка(Выборка[ИмяКолонкиИсходнойСсылки].УникальныйИдентификатор()),
			Строка(Выборка.Ссылка.УникальныйИдентификатор()));
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//   ОбъектМетаданных - ОбъектМетаданных - объект метаданных.
//   ТаблицаИсходныхСсылок - ТаблицаЗначений - исходные ссылки.
//   ИмяКолонкиИсходнойСсылки - Строка - имя колонки.
// Возвращаемое значение:
//   ВыборкаИзРезультатаЗапроса - данные сопоставления с полями объекта:
//   * Ссылка - ЛюбаяСсылка - ссылка на объект.
//
Функция ВыборкаСопоставленияСсылок(Знач ОбъектМетаданных, Знач ТаблицаИсходныхСсылок, Знач ИмяКолонкиИсходнойСсылки) Экспорт
	
	ПоляКлюча = Новый Массив();
	Для Каждого КолонкаКлюча Из ТаблицаИсходныхСсылок.Колонки Цикл
		Если КолонкаКлюча.Имя <> ИмяКолонкиИсходнойСсылки Тогда
			ПоляКлюча.Добавить(КолонкаКлюча.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапросаСопоставления = СформироватьТекстЗапросаСопоставленияСсылокПоЕстественнымКлючам(
		ОбъектМетаданных, ТаблицаИсходныхСсылок.Колонки, ИмяКолонкиИсходнойСсылки);
	
	Запрос = Новый Запрос(ТекстЗапросаСопоставления);
	Запрос.УстановитьПараметр("ТаблицаИсходныхСсылок", ТаблицаИсходныхСсылок);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирование запроса для получения ссылок неразделенных данных в ИБ
//
// Возвращаемое значение:
//  Строка - текст запроса. 
//
Функция СформироватьТекстЗапросаСопоставленияСсылокПоЕстественнымКлючам(Знач ОбъектМетаданных, Знач Колонки, Знач ИмяКолонкиИсходнойСсылки)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсходныхСсылок.*
	|ПОМЕСТИТЬ ИсходныеСсылки
	|ИЗ
	|	&ТаблицаИсходныхСсылок КАК ТаблицаИсходныхСсылок;
	|ВЫБРАТЬ
	|	ИсходныеСсылки.%ИсходнаяСсылка КАК %ИсходнаяСсылка,
	|	_XMLЗагрузка_Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	ИсходныеСсылки КАК ИсходныеСсылки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОбъектМетаданных.ПолноеИмя() + " КАК _XMLЗагрузка_Таблица ";
	
	Итерация = 1;
	Для Каждого Колонка Из Колонки Цикл 
		
		Если Колонка.Имя = ИмяКолонкиИсходнойСсылки Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "%ЛогическаяФункция (ИсходныеСсылки.%ИмяКлюча = _XMLЗагрузка_Таблица.%ИмяКлюча) ";
		
		ЛогическаяФункция = ?(Итерация = 1, "ПО", "И");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяКлюча",          Колонка.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛогическаяФункция", ЛогическаяФункция);
		
		Итерация = Итерация + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИсходнаяСсылка", ИмяКолонкиИсходнойСсылки);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли